<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Friday, November 20, 2020, 1:47 PM -->
<!-- MuClient version 5.07-pre -->

<!-- Plugin "Tallimos_QuitCheck" generated by Plugin Wizard -->

<muclient>
<plugin
   name="Tallimos_QuitCheck"
   author="Tallimos"
   id="c0ce35a7fb12fd2920813cb0"
   language="Lua"
   purpose="Store and retrieve nosave items and keys from a container in manor"
   save_state="y"
   date_written="2020-11-20 13:46:37"
   requires="4.30"
   version="1.0"
   >
</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>	
	<trigger
		script="WithoutLosing"
		group="QuitCheck"
		match="^You may quit safely without losing any items\.$"
		name="WithoutLosing"
		regexp="y"
		sequence="90"
		ignore_case="y"
		omit_from_output="y"
		>
	</trigger>
	<trigger
		script="SafelyQuit"
		group="SafelyQuit"
		match="^You can now safely quit$"
		name="SafelyQuit"
		regexp="y"
		sequence="90"
		ignore_case="y"
		omit_from_output="y"
		>
	</trigger>
	<trigger
		script="EnjoyYourTime"
		group="EnjoyYourTime"
		match="^Enjoy your time playing Aardwolf$"
		name="EnjoyYourTime"
		regexp="y"
		sequence="90"
		ignore_case="y"
		omit_from_output="y"
		>
	</trigger>
	<trigger
		script="NoSaveContainer"
		group="QuitCheck"
		match="^\[(?:\d+)\]\s+\((?:Nosave|Key)\)\s+\- (\d+)\s+(.*?)\s+\((inside (.*?)/(\d+)|Keyring)\)"
		name="NoSaveContainerNoSpace"
		regexp="y"
		sequence="90"
		ignore_case="y"
	   	omit_from_output="y"
		>
	</trigger>
	<trigger
		script="NoSaveContainer"
		group="QuitCheck"
		match="^\[\s+(?:\d+)\]\s+\((?:Nosave|Key)\)\s+\- (\d+)\s+(.*?)\s+\((inside (.*?)/(\d+)|Keyring)\)"
		name="NoSaveContainer"
		regexp="y"
		sequence="90"
		ignore_case="y"
		omit_from_output="y"
		>
	</trigger>
	<trigger
		script="NoSaveNoContainer"
		group="QuitCheck"
		match="^\[(?:\d+)\]\s+\((?:Nosave|Key)\)\s+\- (\d+)\s+(.*?)$"
		name="NoSaveNoContainerNoSpace"
		regexp="y"
		sequence="100"
		ignore_case="y"
		omit_from_output="y"
		>
	</trigger>
	<trigger
		script="NoSaveNoContainer"
		group="QuitCheck"
		match="^\[\s+(?:\d+)\]\s+\((?:Nosave|Key)\)\s+\- (\d+)\s+(.*?)$"
		name="NoSaveNoContainer"
		regexp="y"
		sequence="100"
		ignore_case="y"
		omit_from_output="y"
		>
	</trigger>
</triggers>

<!--  Timers  -->

<timers>
	<timer name="QuitCheckTimer" 
		second="1"  
		enabled="n"
		script="QuitCheckOff"
		>
	</timer>
	<timer name="idle_timer" 
		minute="10"  
		enabled="n"
		script="InventoryOut"
		>
	</timer>
</timers>

<!--  Aliases  -->

<aliases>
	<alias
		match="^(tqc|tquitcheck)$"
		enabled="y"
		script="QuitCheckMenu"
		regexp="y"
		sequence="100"
		ignore_case="y"
		>
	</alias>
	<alias
		match="^(?:tqc|tquitcheck) (?:ManorContainer|MC) (.*?)$"
		enabled="y"
		script="QuitCheckAddManorContainer"
		regexp="y"
		sequence="100"
		ignore_case="y"
		>
	</alias>
	<alias
		match="^(?:tqc|tquitcheck) Bag (\d+)$"
		enabled="y"
		script="QuitCheckAddContainer"
		regexp="y"
		sequence="100"
		ignore_case="y"
		>
	</alias>	
	<alias
		match="^(?:tqc|tquitcheck) Room (\d+)$"
		enabled="y"
		script="QuitCheckAddRoom"
		regexp="y"
		sequence="100"
		ignore_case="y"
		>
	</alias>	
	<alias
		match="^(?:tqc|tquitcheck) Help$"
		enabled="y"
		script="tqc_help"
		regexp="y"
		sequence="100"
		ignore_case="y"
		>
	</alias>
		<alias
		match="^(?:tqc|tquitcheck) idle (on|off)$"
		enabled="y"
		script="ToggleIdle"
		regexp="y"
		sequence="100"
		ignore_case="y"
		>
	</alias>
</aliases>

<!--  Script  -->

<script>
<![CDATA[

require "aard_register_z_on_create"

require "tprint"
require "mw_theme_base"
require "serialize"
require "commas"
require "gmcphelper"
require "copytable"
require "aardmapper"
require "aard_lua_extras"
require "wait"

local msg_colour      = "darkslategrey"
local err_colour      = "firebrick"
local help_colour     = "royalblue"
local qty_colour      = "yellow"
local optional_colour = "lightcoral"
local command_colour  = "white"
local cmd_required    = "royalblue"
local help_command_colour  = "red"

local line = "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-="

local gmcparea = ""
local gmcproomid = 0
itemnumber = 0

function ToggleIdle(name, line, wc)

	local toggle = string.lower(wc[1])
	
	if toggle == "on" then
		check (EnableTimer ("idle_timer", 1))
		check (ResetTimer ("idle_timer"))
		idletoggle = "on"
	elseif toggle == "off" then
		check (EnableTimer ("idle_timer", 0))
		idletoggle = "off"
	end

	SaveState()
	
end

function QuitCheckMenu()

	if QCCheck == "NO" then
		InventoryOut()
	elseif QCCheck == "YES" then
		InventoryIn()
	end
end

function InventoryIn()
	
	ColourNote(msg_colour, "white", "Retrieving all your Keys and NoSave items.")
	
	local container = ManorContainer
	
	if BagContainer ~= 0 then
		container = BagContainer
		SendNoEcho ("get " .. BagContainer)
	end
	
	for i,v in ipairs(QuitCheckTable) do

		qcitem = i
		
		SendNoEcho ("get " .. QuitCheckTable[qcitem]["ID Number"] .. " " .. container)
		
		if QuitCheckTable[qcitem]["Location"] == "keyring" then
			SendNoEcho ("keyring put " .. QuitCheckTable[qcitem]["ID Number"])
		elseif QuitCheckTable[qcitem]["Location"] == "inventory" then
		else
			SendNoEcho ("put " .. QuitCheckTable[qcitem]["ID Number"] .. " " .. QuitCheckTable[qcitem]["Location"])
		end
		
	end

	QCCheck = "NO"
	QuitCheckTable = {}

	itemnumber = 0
	
	if BagContainer ~= 0 then
		SendNoEcho ("drop " .. BagContainer)
	end

	SaveState()

	world.EnableGroup ("EnjoyYourTime", 1)
	SendNoEcho ("echo Enjoy your time playing Aardwolf")
	
end

function EnjoyYourTime()

	ColourNote(msg_colour, "white", "Enjoy your time playing Aardwolf.")
	world.EnableGroup ("EnjoyYourTime", 0)
	
end

function InventoryOut()

	if GetTimerOption ("idle_timer", "enabled") == 1 then		
		check (EnableTimer ("idle_timer", 0))
	end

	GetRoom()
	
	if ManorContainer == "" and ManorRoom == 0 and BagContainer == 0 then
		ColourNote(msg_colour, "", "Manor Container Keyword or Bag ID Number has ", qty_colour, "", "not", msg_colour, "", " been set")
		
		ColourNote(msg_colour, "", "Manor Container/Bag location has ", qty_colour, "", "not", msg_colour, "", " been set.")
		Note()
		
		ColourNote(msg_colour, "", "Please see ", qty_colour, "", "tqc help", msg_colour, "", " for more information.")
		return

	elseif ManorContainer == "" and BagContainer == 0 then 
		ColourNote(msg_colour, "", "Manor Container Keyword or Bag ID Number have ", qty_colour, "", "not", msg_colour, "", " been set")
		
		ColourNote(msg_colour, "", "Please see ", qty_colour, "", "tqc help", msg_colour, "", " for more information.")
		return

	elseif ManorRoom == 0 then
		ColourNote(msg_colour, "", "Manor container or Bag location has ", qty_colour, "", "not", msg_colour, "", " been set.")
		Note()
		
		ColourNote(msg_colour, "", "Please see ", qty_colour, "", "tqc help", msg_colour, "", " for more information.")
		return
	end
	
	if tonumber(gmcproomid) == tonumber(ManorRoom) then
		QuitCheckTable = {}
		world.EnableGroup ("QuitCheck", 1)
		SendNoEcho ("quit check")
		check (EnableTimer ("QuitCheckTimer", 1))
		check (ResetTimer ("QuitCheckTimer"))
		
	else
		ColourNote(msg_colour, "", "Please go to room ", qty_colour, "", ManorRoom, msg_colour, "", " and try again.")
	end
	
end

function WithoutLosing()

	check (EnableTimer ("QuitCheckTimer", 0))
	ColourNote(msg_colour, "", "There were no items to store you can safely quit.")
	QCCheck = "NO"
	
end
	
function QuitCheckOff()
	
	ColourNote(msg_colour, "white", "Storing all your Keys and NoSave items.")
	
	if BagContainer ~= 0 then
		SendNoEcho ("get " .. BagContainer)
	end

	for i,v in ipairs(QuitCheckTable) do

		qcitem = i
	
		if QuitCheckTable[qcitem]["Location"] == "keyring" then
			SendNoEcho ("keyring get " .. QuitCheckTable[qcitem]["ID Number"])
		elseif QuitCheckTable[qcitem]["Location"] == "inventory" then
		else
			SendNoEcho ("get " .. QuitCheckTable[qcitem]["ID Number"] .. " " .. QuitCheckTable[qcitem]["Location"])
		end
		
		if ManorContainer ~= nil and ManorContainer ~= "" then
			SendNoEcho ("put " .. QuitCheckTable[qcitem]["ID Number"] .. " " .. ManorContainer)
		elseif BagContainer ~= 0 then
			SendNoEcho ("put " .. QuitCheckTable[qcitem]["ID Number"] .. " " .. BagContainer)
		end
		
	end

	if BagContainer ~= 0 then
		SendNoEcho ("unkeep " .. BagContainer)
		SendNoEcho ("drop " .. BagContainer)
	end

	world.EnableGroup ("QuitCheck", 0)
	check (EnableTimer ("QuitCheckTimer", 0))
	
	QCCheck = "YES"
	
	SaveState()
	
	world.EnableGroup ("SafelyQuit", 1)
	SendNoEcho ("echo You can now safely quit")

end

function SafelyQuit()

	ColourNote(msg_colour, "white", "You can now safely quit.")
	world.EnableGroup ("SafelyQuit", 0)
	
end

function NoSaveContainer(name, line, wc)

	local idnum = tonumber(wc[1])
	itemnumber = itemnumber + 1

	QuitCheckTable[itemnumber] = {}
	QuitCheckTable[itemnumber]["ID Number"] = idnum
	
	if wc[3] == nil or wc[3] == "" then
	elseif string.lower(wc[3]) == "keyring" then
		QuitCheckTable[itemnumber]["Location"] = "keyring"
	end


	if wc[5] == nil or wc[5] == "" then
	else
		local conid = tonumber(wc[5])
		QuitCheckTable[itemnumber]["Location"] = conid
	end   

end

function NoSaveNoContainer(name, line, wc)

	local idnum = tonumber(wc[1])
	itemnumber = itemnumber + 1
	
	QuitCheckTable[itemnumber] = {}
	QuitCheckTable[itemnumber]["ID Number"] = idnum
	
	if wc[3] == nil or wc[3] == "" then
		QuitCheckTable[itemnumber]["Location"] = "inventory"
	else
		local loc = tonumber(wc[3])
		QuitCheckTable[itemnumber]["Location"] = loc
	end
end

function QuitCheckAddContainer(name, line, wc)

	ManorContainer = ""
	BagContainer = wc[1]
	ColourNote(msg_colour, "", "Container set to ", qty_colour, "", BagContainer)
	
	SaveState()
	
end

function QuitCheckAddManorContainer(name, line, wc)

	ManorContainer = wc[1]
	BagContainer = 0
	ColourNote(msg_colour, "", "Manor Container set to ", qty_colour, "", ManorContainer)
	
	SaveState()
	
end

function QuitCheckAddRoom(name, line, wc)

	ManorRoom = wc[1]
	ColourNote(msg_colour, "", "Room to store Keys and NoSave items set to ", qty_colour, "", ManorRoom)
	
	SaveState()
	
end

function OnPluginInstall ()
	
	ColourNote(help_colour, "", "Thank you for installing Tallimos' QuitCheck. Please see ", help_command_colour, "", "tqc help", help_colour, "", " for more information.")
	
	if GetVariable ("qcpastfirstinstall") == "true" then
	
		assert (loadstring (GetVariable ("idletoggle") or "")) ()
		assert (loadstring (GetVariable ("QuitCheckTable") or "")) ()
		assert (loadstring (GetVariable ("QCCheck") or "")) ()
		assert (loadstring (GetVariable ("BagContainer") or "")) ()
		assert (loadstring (GetVariable ("ManorContainer") or "")) ()
		assert (loadstring (GetVariable ("ManorRoom") or "")) ()

		if idletoggle == "yes" then
			check (EnableTimer ("idle_timer", 1))
			check (ResetTimer ("idle_timer"))
		elseif idletoggle == "no" then
			check (EnableTimer ("idle_timer", 0))
		end
		
	else

		idletoggle = "no"
		BagContainer = 0
		ManorContainer = ""
		ManorRoom = 0
		QuitCheckTable =  {}
		QCCheck = "NO"

	end

	SaveState()

end

function OnPluginEnable()
	
	if GetVariable ("qcpastfirstinstall") == "true" then

		assert (loadstring (GetVariable ("idletoggle") or "")) ()
		assert (loadstring (GetVariable ("QuitCheckTable") or "")) ()
		assert (loadstring (GetVariable ("QCCheck") or "")) ()
		assert (loadstring (GetVariable ("BagContainer") or "")) ()
		assert (loadstring (GetVariable ("ManorContainer") or "")) ()
		assert (loadstring (GetVariable ("ManorRoom") or "")) ()
		
		if idletoggle == "yes" then
			check (EnableTimer ("idle_timer", 1))
			check (ResetTimer ("idle_timer"))
		elseif idletoggle == "no" then
			check (EnableTimer ("idle_timer", 0))
		end

	else
	
		idletoggle = "no"
		BagContainer = 0
		ManorContainer = ""
		ManorRoom = 0
		QuitCheckTable =  {}
		QCCheck = "NO"

	end

	SaveState()
   
end -- OnPluginEnable

function OnPluginSaveState ()

	SetVariable ("idletoggle", "idletoggle = " .. serialize.save_simple (idletoggle))
	SetVariable ("QCCheck", "QCCheck = " .. serialize.save_simple (QCCheck))
	SetVariable ("QuitCheckTable", "QuitCheckTable = " .. serialize.save_simple (QuitCheckTable))
	SetVariable ("ManorContainer", "ManorContainer = " .. serialize.save_simple (ManorContainer))
	SetVariable ("ManorRoom", "ManorRoom = " .. serialize.save_simple (ManorRoom))
	SetVariable ("BagContainer", "BagContainer = " .. serialize.save_simple (BagContainer))
	SetVariable ("qcpastfirstinstall", "true")

end -- OnPluginSaveState

function OnPluginConnect ()

end -- OnPluginConnect

function comma_value(n) 
	local left,num,right = string.match(n,'^([^%d]*%d)(%d*)(.-)$')
	return left..(num:reverse():gsub('(%d%d%d)','%1,'):reverse())..right
end

function remove_comma(n)

	local value = n
	value = string.gsub (value, ",", "")
	return value
	
end -- remove_comma

function GetRoom()

	Send_GMCP_Packet("request room")

	gmcparea = gmcp("room.info.zone")
	gmcproomid = gmcp("room.info.num")
	
end

function tqc_help()
	
	local title = "Tallimos' QuitCheck Help"
	local title2 = "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-="
		
	local leng = tonumber(string.len(title))
	local leng2 = tonumber(string.len(title2))
	
	local spacing = 0
	local lendif = 0
	
	if leng > leng2 then
	else
		lendif = leng2 - leng
		lendif = lendif * 0.5
	end

	spacing = string.rep(" ", lendif)
	
	ColourNote(help_colour, "", spacing, help_command_colour, "", "Tallimos' QuitCheck Help")
	ColourNote(help_colour, "", "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=")
	ColourNote(help_colour, "", "This plugin gives the user the ability to automatically store and retrieve")
	ColourNote(help_colour, "", "Keys and NoSave items upon quitting and returning.")
	ColourNote(help_colour, "", "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=")
	Note("")
	
	ColourNote(help_command_colour, "", "tqc             ", help_colour, "", " - command to store and retrieve Keys and NoSave items")
	Note("")
	
	ColourNote(help_command_colour, "", "tqc mc <keyword>", help_colour, "", " - command to set the keyword of your manor container ")
	Note("")

	ColourNote(help_command_colour, "", "tqc bag <id #>  ", help_colour, "", " - command to set the id number of a container if you")
	ColourNote(help_colour, "", "                   do not have a manor container.")
	ColourNote(help_command_colour, "", "                   PLEASE NOTE: ", help_colour, "", "this continer will be dropped on the floor ")
	Note("")

	ColourNote(help_command_colour, "", "tqc room <id #> ", help_colour, "", " - command to set the room number where your manor")
	ColourNote(help_colour, "", "                   container is located or where a container storeing the")
	ColourNote(help_colour, "", "                   keys and nosave items will be stored.")
	Note("")

	ColourNote(help_command_colour, "", "PLEASE NOTE: ", help_colour, "", "If you idle in your designated container location for 10")
	ColourNote(help_colour, "", "minutes your items will automatically be stored and returned upon you when")
	ColourNote(help_colour, "", "you enter any command. This timer can be enabled with ", help_command_colour, "", "tqc idle <on|off>")
	Note("")

	ColourNote(help_colour, "", "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=")
	Note("")

end	-- tqc_help

function OnPluginCommandEntered (sText)
  FixTimer (sText)
  return true  -- process the command
end

function OnPluginConnect ()
  FixTimer ()  
end

--------------------------------------------
------------ FIX TIMER FUNCTION ------------
--------------------------------------------

function FixTimer (sText)
	
	if GetTimerOption ("idle_timer", "enabled") == 1 then		

		if QCCheck == "YES" then
			InventoryIn()
		end

		check (EnableTimer ("idle_timer", 1))
		check (ResetTimer ("idle_timer"))
	
	end
	
end -- FixTimer


]]>
</script>
</muclient>
