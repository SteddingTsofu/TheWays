<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Wednesday, August 15, 2018, 11:41 AM -->
<!-- MuClient version 5.06-pre -->

<!-- Plugin "Envenomizer" generated by Plugin Wizard -->

<muclient>
<plugin
   name="Tallimos_Envenomizer2020"
   author="Tallimos"
   id="b445cca7f6737a991a3f55ac"
   language="Lua"
   purpose="Envenoms all weapons given to user. Will also return non weapons."
   save_state="y"
   date_written="2018-08-15 11:40:15"
   requires="4.00"
   version="1.1"
   >
   
</plugin>

<!--  Triggers  -->

<triggers>
  	<trigger
		expand_variables="y"
		group="EqData"
		match="^{\/eqdata}$"
		name="EqDataEnd"
		regexp="y"
		send_to="12"
		sequence="100"
		omit_from_output="y"
		>
			<send>
				world.EnableGroup ("EqData", 0)
				world.EnableGroup ("EnvGetHelm", 0)
			</send>
	</trigger>
	<trigger
		expand_variables="y"
		group="EqData"
		match="^{eqdata}$"
		name="EqDataBegin"
		regexp="y"
		sequence="100"
		omit_from_output="y"
		>
	</trigger>
    <trigger
		script="EnvGetHelm"
		group="EnvGetHelm"
		match="^(\d+),(?:\w+),(?:.*?),(?:\d+),(?:\d+),(?:\d+),(\d+),\-1$"
		regexp="y"
		sequence="100"
		omit_from_output="y"	
		>
	</trigger>
	<trigger
		script="DisableWeaponReturn"
		group="OwnedCarry"
		match="^\[\s+(\d+)\s+\] owned item found\.$"
		regexp="y"
		sequence="100"
		>
	</trigger>
	<trigger
		script="EnableWeaponReturn"
		group="OwnedCarry"
		match="^(.*?)\s+\((\d+)\)\s+\*(\d+)\s+(.*?)\s+(.*?)$"
		regexp="y"
		sequence="100"
		>
	</trigger>
	<trigger
		script="EnableWeaponReturn"
		group="OwnedCarry"
		match="^(.*?)\s+\((\d+)\)\s+(\d+)\s+(.*?)\s+(.*?)$"
		regexp="y"
		sequence="100"
		>
	</trigger>
	<trigger
		group="Envenoms"
		keep_evaluating="y"
		match="^You fail to envenom (.*?)\.$"
		regexp="y"
		script="EnvenomFail"
		sequence="100"
		>
	</trigger>
	<trigger
		name="ReturnProtocol"
		match="^Commence Already Envenomed Return protocol\!$"
		regexp="y"
		script="AlreadyEnvenomed"
		sequence="100"
		omit_from_output="y"
		>
	</trigger>
	<trigger
		group="Envenoms"
		match="^You receive (.*?) gold from (.*?)\.$"
		regexp="y"
		script="GoldReceived"
		sequence="85"
		>
	</trigger>
		<trigger
		group="Envenoms"
		keep_evaluating="y"
		match="^You receive (\d+) (.*?) from (.*?)\.$"
		regexp="y"
		script="MultiWeaponReceived"
		sequence="90"
		>
	</trigger>
	<trigger
		group="Envenoms"
		keep_evaluating="y"
		match="^You receive (.*?) from (.*?)\.$"
		regexp="y"
		script="WeaponReceived"
		sequence="110"
		>
	</trigger>
	<trigger
		group="Envenoms"
		lines_to_match="2"
		keep_evaluating="y"
		name="coating"
		match="You coat .* with deadly poison\.\n\{invitem\}(\d+)\,.*\Z"
		multi_line="y"
		regexp="y"
		script="WeaponCoated"
		sequence="100"
		>
	</trigger>
	<trigger
		group="Envenoms"
		keep_evaluating="y"
		match="^\{invmon\}4\,(\d+)\,\-1\,\-1$"
		regexp="y"
		script="WeaponID"
		sequence="50"
		>
	</trigger>
</triggers>

<timers>
	<timer
		name="envenomend" 
		second="1"  
		enabled="n"
		script="EnvenomEnd"
		>
	</timer>
	<timer
		name="envenomfail" 
		second="1"  
		enabled="n"
		script="EnvenomResume"
		>
	</timer>
</timers>

<!--  Aliases  -->

<aliases>
	<alias
		script="env_help"
		match="^env help$"
		enabled="y"
		expand_variables="y"
		regexp="y"
		sequence="100"
		>
	</alias>
	<alias
		script="ReturnWeapons"
		match="^checkweapons$"
		enabled="y"
		expand_variables="y"
		regexp="y"
		sequence="100"
		>
	</alias>
	<alias
		name="EnvAll"
		match="^envall$"
		group="Envenoms"
		script="EnvenomAll"
		sequence="100"
		regexp="y"
		>
		</alias>
	<alias
		match="^envoff$"
		name="EnvOff"
		group="Envenoms"
		script="EnvenomOff"
		sequence="100"
		regexp="y"
		>
	</alias>
	<alias
		group="envon"
		match="^(?:envons|envonsilent)$"
		enabled="y"
		name="EnvOnSilent"
		script="EnvenomOnSilent"
		sequence="100"
		regexp="y"
		>
	</alias>

	<alias
		group="envon"
		match="^envon$"
		enabled="y"
		name="EnvOn"
		script="EnvenomOn"
		sequence="100"
		regexp="y"
		>
	</alias>
	<alias
		group="Envenoms"
		match="^(envnew|envnewcomers|envnc)$"
		script="NewComers"
		sequence="100"
		regexp="y"
		>
	</alias>
		<alias
		group="Envenoms"
		match="^(envlc|envlastcall)$"
		script="LastCall"
		sequence="100"
		regexp="y"
		>
	</alias>
	<alias
		script="EnvTrueHelm"
		match="^(?:envhelm|envh) (\d+)$"
		expand_variables="y"
		regexp="y"
		sequence="100"
		enabled="y"
		>
	</alias>
	<alias
		script="EnvTrueHelmBag"
		match="^(?:envbag|envb) (\d+)$"
		expand_variables="y"
		regexp="y"
		sequence="100"
		enabled="y"
		>
	</alias>
	<alias
		script="EnvBroadcastChannel"
		match="^envbc (.*?)$"
		enabled="y"
		ignore_case="y"
		regexp="y"
		sequence="200"
		>
	</alias>
	<alias
		script="EnvBroadcastChannelDisplay"
		match="^envbc$"
		enabled="y"
		ignore_case="y"
		regexp="y"
		sequence="200"
		>
	</alias>
</aliases>

<script>
<![CDATA[
-- blah

require "tprint"
require "mw_theme_base"
require "serialize"
require "commas"
require "gmcphelper"
require "copytable"
require "aardmapper"
require "aard_lua_extras"
require "wait"

local msg_colour      = "darkslategrey"
local err_colour      = "firebrick"
local help_colour     = "royalblue"
local qty_colour      = "yellow"
local optional_colour = "lightcoral"
local command_colour  = "white"
local cmd_required    = "royalblue"
local help_command_colour  = "red"

EnvenomTable = {}
EnvenomTableCopy = {}
idnum = ""
weapnum = 0
weapnumcopy = 0
EnvTrue = 0
EnvTrueBag = 0
EnvHelm = 0
EnvGold = 0
gmcparea = ""
gmcproomid = ""
gmcproomname = ""
EnvBChannel = "gt"
EnvSilent = "NO"

function EnvTrueHelm(name, line, wc)
	
	if wc[1] == nill or wc[1] == "" then
	else
		
		EnvTrue = tonumber(wc[1])
		
		ColourNote(msg_colour, "", "ID for your ", "red", "", "Aardwolf ", "yellow", "", "Helm of True Sight", msg_colour, "", " has been set to ", qty_colour, "", EnvTrue)
		
	end

	SaveState()
	
end

function EnvTrueHelmBag(name, line, wc)
	
	if wc[1] == nill or wc[1] == "" then
	else
		
		EnvTrueBag = tonumber(wc[1])
		
		ColourNote(msg_colour, "", "ID for your container storing ", "red", "", "Aardwolf ", "yellow", "", "Helm of True Sight", msg_colour, "", " has been set to ", qty_colour, "", EnvTrueBag)
		
	end

	SaveState()
	
end

function EnvGetHelmTrig()

	world.EnableGroup ("EqData", 1)
	world.EnableGroup ("EnvGetHelm", 1)
	SendNoEcho ("eqdata")

end -- EnvGetHelmTrig

function EnvGetHelm(name, line, wc)
	
	if tonumber(wc[2]) == 1 then
		EnvHelm = tonumber(wc[1])
	end

end -- EnvGetHelm

function WeaponID(name, line, wc)

	idnum = wc[1]
	weapnum = weapnum + 1
	
	EnvenomTable[weapnum] = {}
	EnvenomTable[weapnum]["IDNumber"] = idnum
	
end

function WeaponReceived(name, line, wc)

	local charname = wc[2]
	
	EnvenomTable[weapnum]["CharName"] = charname
	
end

function MultiWeaponReceived(name, line, wc)

	local weapamt = tonumber(wc[1])
	local charname = wc[3]
	
	local startnum = weapnum - weapamt
	local endnum = weapnum

	for i = startnum, endnum do
		EnvenomTable[i]["CharName"] = charname
	end
	
end

function WeaponCoated(name, line, wc)

	local number = wc[1]
	
	for i,v in ipairs(EnvenomTableCopy) do

		weap = i

		if EnvenomTableCopy[weap]["IDNumber"] == number then
			if EnvenomTableCopy[weap]["CharName"] == "" or EnvenomTableCopy[weap]["CharName"] == nil then
				table.remove(EnvenomTableCopy, weap)
			else
				Send ("give " .. EnvenomTableCopy[weap]["IDNumber"] .. " " .. EnvenomTableCopy[weap]["CharName"])
				table.remove(EnvenomTableCopy, weap)
			end
		end
		
	end

	weapnumcopy = weapnumcopy - 1
	
	world.EnableGroup ("Coated", 0)
	
end

function EnvenomAll()

	EnvenomTableCopy = {}
	
	for i,v in pairs(EnvenomTable) do
		EnvenomTableCopy[i] = v
	end

	EnvenomTable = {}
	
	EnableAlias ("EnvAll", false)

	weapnumcopy = weapnum

	weapnum = 0
	
	local lag = weapnumcopy * 3
	
	SetTimerOption ("envenomend", "seconds", lag)
	
	check (ResetTimer ("envenomend"))
	check (EnableTimer ("envenomend", 1))
	
	for i,v in ipairs(EnvenomTableCopy) do

		weap = i
		
		if EnvenomTableCopy[weap]["IDNumber"] == nil or EnvenomTableCopy[weap]["IDNumber"] == "" then
		else
			Send ("envenom " .. EnvenomTableCopy[weap]["IDNumber"])
		end
		
	end
	
	EnableTrigger("ReturnProtocol")
	
end

function EnvenomAllNoCopy()

	EnableAlias ("EnvAll", false)

	local lag = weapnumcopy * 3
	
	SetTimerOption ("envenomend", "seconds", lag)
	
	check (ResetTimer ("envenomend"))
	check (EnableTimer ("envenomend", 1))
	
	for i,v in ipairs(EnvenomTableCopy) do

		weap = i
		
		Send ("envenom " .. EnvenomTableCopy[weap]["IDNumber"])
		
	end
	
	EnableTrigger("ReturnProtocol")
	
end

function EnvenomEnd()

	SendNoEcho ("echo Commence Already Envenomed Return protocol!")
	check (EnableTimer ("envenomend", 0))
	
end

function AlreadyEnvenomed()

	for i,v in ipairs(EnvenomTableCopy) do
	
		weap = i
		
		if EnvenomTableCopy[weap] == "" or EnvenomTableCopy[weap] == nil then
		else
			if EnvenomTableCopy[weap]["CharName"] == nil or EnvenomTableCopy[weap]["CharName"] == "" then
			else
				Send ("give " .. EnvenomTableCopy[weap]["IDNumber"] .. " " .. EnvenomTableCopy[weap]["CharName"])
			end
		end
		
	end

	EnvenomTableCopy = {}
	idnum = 0

	EnableAlias ("EnvAll", true)
	EnableTrigger("ReturnProtocol", false)

end

function EnvenomOn()
	
	GetRoom()
	
	EnvGetHelmTrig()
    EnvenomTable = {}
	EnvenomTableCopy = {}

	weapnum = 0
	idnum = 0
	EnvGold = 0
	EnvSilent = "NO"
	
	EnableAlias ("EnvOn", false)
	EnableAlias ("EnvOnSilent", false)
	
	world.EnableGroup ("Envenoms", 1)
	SendNoEcho ("invmon on")

	if EnvTrue ~= 0 then
		SendNoEcho ("get " .. EnvTrue .. " " .. EnvTrueBag)
		SendNoEcho ("wear " .. EnvTrue)
	else
		ColourNote(err_colour, "", "You have not set the ID number for your TRUE SEEING HELM. Please read ", qty_colour, "", "envhelp", err_colour, "", " for more information.")
		Note()
		ColourNote(err_colour, "", "If True Seeing drops it might cause an error with the script.")
	end

	gmcpbase = gmcp("char.base") -- fetch char.status and return it as a Lua table
	charname = gmcpbase.name

	Send (EnvBChannel .. " @DEnvenom system is now @RONLINE @DLocation:[@R" .. gmcparea .. "@D/@R" .. gmcproomname .. "@D/@R" .. gmcproomid .. "@D]@w")
	Send (EnvBChannel .. " @RDO NOT @Dgive all.'weapon' or errors may occur.@w")
	
end

function EnvenomOnSilent()
	
	GetRoom()
	
	EnvGetHelmTrig()
    EnvenomTable = {}
	EnvenomTableCopy = {}

	weapnum = 0
	idnum = 0
	EnvGold = 0
	EnvSilent = "YES"
	
	EnableAlias ("EnvOn", false)
	EnableAlias ("EnvOnSilent", false)
	
	world.EnableGroup ("Envenoms", 1)
	SendNoEcho ("invmon on")

	if EnvTrue ~= 0 then
		SendNoEcho ("get " .. EnvTrue .. " " .. EnvTrueBag)
		SendNoEcho ("wear " .. EnvTrue)
	else
		ColourNote(err_colour, "", "You have not set the ID number for your TRUE SEEING HELM. Please read ", qty_colour, "", "envhelp", err_colour, "", " for more information.")
		Note()
		ColourNote(err_colour, "", "If True Seeing drops it might cause an error with the script.")
	end

	gmcpbase = gmcp("char.base") -- fetch char.status and return it as a Lua table
	charname = gmcpbase.name

end

function NewComers()

	GetRoom()

	Send (EnvBChannel .. " @DEnvenom system is @RONLINE@D (repeating for new comers) Location:[@R" .. gmcparea .. "@D/@R" .. gmcproomname .. "@D/@R" .. gmcproomid .. "@D]@w")
	Send (EnvBChannel .. " @RDO NOT @Dgive all.'weapon' or errors may occur.@w")
	
end

function LastCall()

	GetRoom()

	Send (EnvBChannel .. " @RLAST CALL @Dfor Envenoms Location:[@R" .. gmcparea .. "@D/@R" .. gmcproomname .. "@D/@R" .. gmcproomid .. "@D]@w")
	Send (EnvBChannel .. " @RDO NOT @Dgive all.'weapon' or errors may occur.@w")
	
end

function EnvenomOff()
	
		world.EnableGroup ("Envenoms", 0)

		EnvenomTable = {}
		EnvenomTableCopy = {}
		
		SendNoEcho ("invmon off")
		SendNoEcho ("wear " .. EnvHelm)

		if EnvTrue ~= 0 then
			SendNoEcho ("put " .. EnvTrue .. " " .. EnvTrueBag)
		else
			ColourNote(err_colour, "", "A reminder - You have not set the ID number for your TRUE SEEING HELM. Please read ", qty_colour, "", "envhelp", err_colour, "", " for more information.")
			Note()
			ColourNote(err_colour, "", "If True Seeing drops it might cause an error with the script.")
		end
	
	EnableAlias ("EnvOn", true)
	EnableAlias ("EnvSilent", true)
	
	if EnvSilent == "YES" then
		EnvSilent = "NO"
		
	elseif EnvSilent == "NO" then
		
		Send (EnvBChannel .. " @DEnvenom system is now @ROFFLINE@D.@w")
		
		if EnvGold ~= 0 then
			local gold = comma_value(EnvGold)
			
			Send (EnvBChannel .. " @DThank you for your donations of @R" .. gold .. " @Dgold.@w")
			
		end
	end
	
end

function EnvenomFail()

	timerremaining = GetTimerOption ("envenomend", "second")
	
	SetTimerOption ("envenomfail", "seconds", timerremaining)
	
	timerremaining = tonumber(timerremaining) + 3
	
	SetTimerOption ("envenomend", "seconds", timerremaining)
	
	check (ResetTimer ("envenomfail"))
	check (ResetTimer ("envenomend"))
	check (EnableTimer ("envenomfail", 1))
	check (EnableTimer ("envenomend", 1))

end

function EnvenomResume()

	check (EnableTimer ("envenomfail", 0))

	EnvenomAllNoCopy()

end

function ReturnWeapons()

	world.EnableGroup ("OwnedCarry", 1)
	Send ("ownedcarry")
	
end

function DisableWeaponReturn()

	world.EnableGroup ("OwnedCarry", 0)
	
end

function EnableWeaponReturn(name, line, wc)

	Send ("give (" .. wc[2] .. ") " .. wc[4])

end

function GoldReceived(name, line, wc)

	local gold = wc[1]

	local leng = tonumber(string.len(gold))

	if leng > 3 then
		gold = remove_comma(wc[1])
	end

	gold = tonumber(gold)
	EnvGold = EnvGold + gold
	
end

function EnvBroadcastChannelDisplay()

	if EnvBChannel == nil or EnvBChannel == "" then
		ColourNote (err_colour, "", "No Envenom Broadcast Channel has been set.")
	else
		ColourNote (msg_colour, "", "Envenom Broadcast Channel is set to ", qty_colour, "", EnvBChannel)
	end
	
end

function EnvBroadcastChannel(name, line, wc)

	if wc[1] == nil or wc[1] == "" then
	else
		
		EnvBChannel = wc[1]
		
		ColourNote (msg_colour, "", "Envenom Broadcast channel has been changed to - ", qty_colour, "", EnvBChannel)
	
		SaveState()
	end
	
end

-------------------------------------------
------------ GET ROOM FUNCTION ------------
-------------------------------------------

function GetRoom()

	Send_GMCP_Packet("request room")

	gmcparea = gmcp("room.info.zone")
	gmcproomid = gmcp("room.info.num")
	gmcproomname = gmcp("room.info.name")
	
end

function env_help()

	local title = "Tallimos' Envenomizer - Help"
	local title2 = "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-="
	
	local leng = tonumber(string.len(title))
	local leng2 = tonumber(string.len(title2))
	
	local spacing = 0
	local lendif = 0
	
	if leng > leng2 then
	else
		lendif = leng2 - leng
		lendif = lendif * 0.5
	end

	spacing = string.rep(" ", lendif)
	
	ColourNote(help_colour, "", spacing, help_command_colour, "", "Tallimos' Envenomizer - Help")
	ColourNote(help_colour, "", "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=")
	ColourNote(help_colour, "", "This script will allow any venomist to envenom and return weapons to")
	ColourNote(help_colour, "", "their owners")
	ColourNote(help_colour, "", "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=")
	Note("")

	ColourNote(help_command_colour, "", "envon          ", help_colour, "", " - turns the envenom system on")
	Note("")

	ColourNote(help_command_colour, "", "envons         ", help_colour, "", " - turns the envenom system on but does not broadcast")
	Note("")

	ColourNote(help_command_colour, "", "envoff         ", help_colour, "", " - turns the envenom system off")
	Note("")
	
	ColourNote(help_command_colour, "", "envall         ", help_colour, "", " - envenom all weapons given to user")
	Note("")

	ColourNote(help_command_colour, "", "envbc <channel>", help_colour, "", " - sets the broadcast channel")
	Note("")
	
	ColourNote(help_command_colour, "", "envbc          ", help_colour, "", " - shows what channel the user has set for broadcasting, default is gt")
	Note("")

	ColourNote(help_command_colour, "", "envnewcomers   ", help_colour, "", " - repeats report channel messages for new comers")
	ColourNote(help_colour, "", "                  can also be shorten to", help_command_colour, "", "envnew", help_colour, "", " and ", help_command_colour, "", "envnc")
	Note("")

	ColourNote(help_command_colour, "", "envlastcall    ", help_colour, "", " - sends a last call for envenoms message to report channel")
	ColourNote(help_colour, "", "                  can also be shorten to", help_command_colour, "", "envlc")
	Note("")

	ColourNote(help_command_colour, "", "checkweapons   ", help_colour, "", " - used at the end to returned any owned weapons to")
	ColourNote(help_colour, "", "                  their owners that got missed")
	Note("")

	ColourNote(help_command_colour, "", "envhelm <idnum>", help_colour, "", " - used to set the id number of your true seeing helm")
	ColourNote(help_colour, "", "                  command can be shorten to ", help_command_colour, "", "envh")
	Note("")

	ColourNote(help_command_colour, "", "envbag <idnum> ", help_colour, "", " - used to set the id number of the container which")
	ColourNote(help_colour, "", "                  holds your true seeing helm command can be shorten")
	ColourNote(help_colour, "", "                  to ", help_command_colour, "", "envb")
	Note("")
		
	ColourNote(help_colour, "", "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=")
	Note("")

end	-- env_help


function OnPluginInstall ()

	ColourNote(help_colour, "", "Thank you for installing Tallimos' Envenomizer. Please see ", help_command_colour, "", "env help", help_colour, "", " for more information.")


	if GetVariable ("envpastfirstinstall") == "true" then
		assert (loadstring (GetVariable ("EnvTrue") or "")) ()
		assert (loadstring (GetVariable ("EnvTrueBag") or "")) ()
		assert (loadstring (GetVariable ("EnvBChannel") or "")) ()
		
	else
	
		EnvTrue = 0
		EnvTrueBag = 0
		EnvBChannel = "gt"
	end

	SaveState()

end

function OnPluginEnable()
	
	if GetVariable ("envpastfirstinstall") == "true" then
		assert (loadstring (GetVariable ("EnvTrue") or "")) ()
		assert (loadstring (GetVariable ("EnvTrueBag") or "")) ()
		assert (loadstring (GetVariable ("EnvBChannel") or "")) ()
		
	else
	
		EnvTrue = 0
		EnvTrueBag = 0
		EnvBChannel = "gt"

	end

	SaveState()
   
end -- OnPluginEnable

function OnPluginSaveState ()

	SetVariable ("EnvTrue", "EnvTrue = " .. serialize.save_simple (EnvTrue))
	SetVariable ("EnvTrueBag", "EnvTrueBag = " .. serialize.save_simple (EnvTrueBag))
	SetVariable ("EnvBChannel", "EnvBChannel = " .. serialize.save_simple (EnvBChannel))
	SetVariable ("envpastfirstinstall", "true")

end -- OnPluginSaveState

function comma_value(n) 
	local left,num,right = string.match(n,'^([^%d]*%d)(%d*)(.-)$')
	return left..(num:reverse():gsub('(%d%d%d)','%1,'):reverse())..right
end

function remove_comma(n)

	local value = n
	value = string.gsub (value, ",", "")
	return value
	
end -- remove_comma


]]>
</script>
</muclient>