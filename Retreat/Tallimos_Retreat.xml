<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Thursday, December 30, 2021, 9:37 AM -->
<!-- MuClient version 5.07-pre -->

<!-- Plugin "Tallimos_Retreat" generated by Plugin Wizard -->

<muclient>
<plugin
   name="Tallimos_Retreat"
   author="Tallimos"
   id="ec470cedcef11a896ce35e2b"
   language="Lua"
   purpose="Gives the arrow keys a smart retreat function"
   save_state="y"
   date_written="2021-12-30 09:36:56"
   requires="4.36"
   version="1.0"
   >

</plugin>

<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
	<trigger
		enabled="n"
		group="RetreatTriggers"
		match="^You retreat from the fight!$"
		sequence="100"
		ignore_case="y"
		regexp="y"
		script="RetreatSuccessful"
		>
	</trigger>
	<trigger
		enabled="n"
		group="RetreatTriggers"
		match="^You are entangled in an invisible web.$"
		sequence="100"
		ignore_case="y"
		regexp="y"
		script="RetreatWebbed"
		>
	</trigger>
	<trigger
		enabled="n"
		group="RetreatTriggers"
		match="^You cannot retreat in that direction!$"
		sequence="100"
		ignore_case="y"
		regexp="y"
		script="RetreatNoPath"
		>
	</trigger>
	<trigger
		enabled="n"
		group="RetreatTriggers"
		match="^You feel too slothful to move.$"
		sequence="100"
		ignore_case="y"
		regexp="y"
		script="RetreatSlothed"
		>
	</trigger>
	<trigger
		enabled="n"
		group="RetreatTriggers"
		match="^You FAIL to retreat!$"
		sequence="100"
		ignore_case="y"
		regexp="y"
		script="RetreatFailed"
		>
	</trigger>
</triggers>

<!--  Aliases  -->

<aliases>
	<alias
		script="CommandMenu"
		match="^(?:tr|tret|tretreat) (.*?)$"
		enabled="y"
		ignore_case="y"
		regexp="y"
		sequence="100"
		>
	</alias>
	<alias
		script="RetreatUp"
		match="^tretu$"
		enabled="y"
		ignore_case="y"
		regexp="y"
		sequence="100"
		>
	</alias>
	<alias
		script="RetreatDown"
		match="^tretd$"
		enabled="y"
		ignore_case="y"
		regexp="y"
		sequence="100"
		>
	</alias>
	<alias
		script="RetreatNorth"
		match="^tretn$"
		enabled="y"
		ignore_case="y"
		regexp="y"
		sequence="100"
		>
	</alias>
	<alias
		script="RetreatSouth"
		match="^trets$"
		enabled="y"
		ignore_case="y"
		regexp="y"
		sequence="100"
		>
	</alias>
	<alias
		script="RetreatEast"
		match="^trete$"
		enabled="y"
		ignore_case="y"
		regexp="y"
		sequence="100"
		>
	</alias>
	<alias
		script="RetreatWest"
		match="^tretw$"
		enabled="y"
		ignore_case="y"
		regexp="y"
		sequence="100"
		>
	</alias>
</aliases>

<script>
<![CDATA[
require "serialize"
require "commas"
require "gmcphelper"
require "aard_lua_extras"

local msg_colour      = "lightslategrey"
local err_colour      = "firebrick"
local help_colour     = "lightslategrey"
local qty_colour      = "cyan"
local optional_colour = "lightcoral"
local command_colour  = "white"
local cmd_required    = "royalblue"
local help_command_colour  = "red"

local noteline = "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-="
local msgline  = "**************************************************************" 
	
--------------------------------------------
--------------- COMMAND MENU ---------------
--------------------------------------------
function CommandMenu(name, line, wc)
	commandline = trim(string.lower(wc[1]))
	wordtable = utils.split (commandline, " ")

	cmd = wordtable[1]
	
	if cmd == "enable" then
		autoloadkeys = "TRUE"
		LoadKeys()
	elseif cmd == "disable" then
		autoloadkeys = "FALSE"
		UnloadKeys()
	elseif cmd == "help" then
		RetreatHelp()
	else		
		ColourNote(msg_colour, "", "Invalid command. Please see ", qty_colour, "", "tret help", msg_colour, "", " for more information.")
		Note("")
	end
	
	SaveState()
end -- CommandMenu

function RetreatSuccessful()
	world.EnableGroup ("RetreatTriggers", 0)
	canretreat = "TRUE"
end -- RetreatSuccessful

function RetreatWebbed()
	world.EnableGroup ("RetreatTriggers", 0)
	canretreat = "TRUE"

	ColourNote ("red", "black", msgline)
	ColourNote ("red", "black", "***************", "white", "black", " RETREAT FAILED YOU ARE WEBBED ", "red", "black", "****************")
	ColourNote ("red", "black", msgline)
end -- RetreatWebbed

function RetreatNoPath()
	world.EnableGroup ("RetreatTriggers", 0)
	canretreat = "TRUE"
	
	ColourNote ("red", "black", msgline)
	ColourNote ("red", "black", "**************", "white", "black", " CANNOT RETREAT IN THAT DIRECTION ", "red", "black", "**************")
	ColourNote ("red", "black", msgline)
end -- RetreatNoPath

function RetreatSlothed()
	world.EnableGroup ("RetreatTriggers", 0)
	canretreat = "TRUE"
	
	ColourNote ("red", "black", msgline)
	ColourNote ("red", "black", "***************", "white", "black", " RETREAT FAILED YOU ARE SLOTHED ", "red", "black", "***************")
	ColourNote ("red", "black", msgline)
end -- RetreatSlothed

function RetreatFailed()
	world.EnableGroup ("RetreatTriggers", 0)
	canretreat = "TRUE"
	
	ColourNote ("red", "black", msgline)
	ColourNote ("red", "black", "***********************", "white", "black", " RETREAT FAILED ", "red", "black", "***********************")
	ColourNote ("red", "black", msgline)
end -- RetreatFailed

function RetreatStart(retdir)
	if gmcpstatus ~= "8" then
		SendNoEcho(retdir)
	else
		if canretreat == "TRUE" then
			world.EnableGroup ("RetreatTriggers", 1)
			canretreat = "FALSE"
	
			SendNoEcho("retreat " .. retdir)
		else
			ColourNote ("red", "black", msgline)
			ColourNote ("red", "black", "***************", "white", "black", " RETREAT IN PROGRESS PLEASE WAIT ", "red", "black", "**************")
			ColourNote ("red", "black", msgline)
		end
	end
end -- RetreatStart

function RetreatUp()
	retdir = "up"
	
	RetreatStart(retdir)
end -- RetreatUp

function RetreatDown()
	retdir = "down"
	
	RetreatStart(retdir)
end -- RetreatDown

function RetreatNorth()
	retdir = "north"
	
	RetreatStart(retdir)
end -- RetreatNorth

function RetreatSouth()
	retdir = "south"
	
	RetreatStart(retdir)
end -- RetreatSouth

function RetreatEast()
	retdir = "east"
	
	RetreatStart(retdir)
end -- RetreatEast

function RetreatWest()
	retdir = "west"
	
	RetreatStart(retdir)
end -- RetreatWest

function LoadKeys()
	ColourNote(msg_colour, "", "Smart Retreat System Enabled - Directional keys have now been set. Turn NumLock ON to use.")
	
	Accelerator ("Numpad8", "tretn") -- North
	Accelerator ("Numpad2", "trets") -- South
	Accelerator ("Numpad6", "trete") -- East
	Accelerator ("Numpad4", "tretw") -- West
	Accelerator ("Numpad9", "tretu") -- Up
	Accelerator ("Numpad1", "tretd") -- Down
end -- LoadKeys

function UnloadKeys()
	ColourNote(msg_colour, "", "Smart Retreat System Disabled - Direction Keys restored to system default.")
	
	UnloadKeysQuiet()
end -- UnloadKeys

function UnloadKeysQuiet()
	Accelerator ("Numpad8", "")
	Accelerator ("Numpad2", "")
	Accelerator ("Numpad6", "")
	Accelerator ("Numpad4", "")
	Accelerator ("Numpad9", "")
	Accelerator ("Numpad1", "")
end -- UnloadKeysQuiet

---------------------------------------------
--------------- HELP FUNCTION ---------------
---------------------------------------------
function RetreatHelp()	
	local title = "Tallimos' Retreat v" .. PLUGIN_VERSION .. " Help"
	local title2 = noteline
	
	spacing = HelpSpacing(title, title2)
	
	ColourNote(help_colour, "", spacing, help_command_colour, "", title)

	ColourNote(help_colour, "", noteline)

	ColourNote(help_colour, "", "This plugin transforms the directional keys into a smart retreat. The user can push a direction")
	ColourNote(help_colour, "", "key and the script will determine if the user is in combat or not. If they are in combat the")
	ColourNote(help_colour, "", "script will attempt to retreat in that direction. Informational messages will appear to tell the")
	ColourNote(help_colour, "", "user if there was something that prevented them from retreating. Once a direction key is pushed")
	ColourNote(help_colour, "", "all further pushes will be ignored until the original retreat request has been resolved.")
	ColourNote(help_colour, "", "If not in combat the script will just move the user in the direction they chose.")
	
	ColourNote(help_colour, "", noteline)
	
	Note("")
	ColourNote(help_command_colour, "", "tret enable ", help_colour, "", " - turns the directional keys into retreat keys and will do so automatically when")
	ColourNote(help_command_colour, "", "            ", help_colour, "", "   mush is loaded")
	ColourNote(help_command_colour, "", "tret disable", help_colour, "", " - turns the directional keys back to system default and will disable the automatic")
	ColourNote(help_command_colour, "", "            ", help_colour, "", "   key loading.")	

	Note("")
	
	ColourNote(help_command_colour, "", "PLEASE NOTE:", help_colour, "", " if you user chooses not to use the above commands they can assign the aliases")	
	ColourNote(help_command_colour, "", "            ", help_colour, "", " manually.")

	Note("")
	
	ColourNote(help_colour, "", "Alias List")
	ColourNote(help_colour, "", "----------")
	ColourNote(help_command_colour, "", "tretu", help_colour, "", " - for the UP direction and should be assigned to Numpad9")	
	ColourNote(help_command_colour, "", "tretd", help_colour, "", " - for the DOWN direction and should be assigned to Numpad1")
	ColourNote(help_command_colour, "", "tretn", help_colour, "", " - for the NORTH direction and should be assigned to Numpad8")
	ColourNote(help_command_colour, "", "trets", help_colour, "", " - for the SOUTH direction and should be assigned to Numpad2")
	ColourNote(help_command_colour, "", "trete", help_colour, "", " - for the EAST direction and should be assigned to Numpad6")
	ColourNote(help_command_colour, "", "tretw", help_colour, "", " - for the WEST direction and should be assigned to Numpad4")

	
	ColourNote(help_colour, "", noteline)
	
	Note("")
end	-- RetreatHelp

function HelpSpacing(title, title2)
	local leng = tonumber(string.len(title))
	local leng2 = tonumber(string.len(title2))
	
	local spacing = 0
	local lendif = 0
	
	if leng > leng2 then
	else
		lendif = leng2 - leng
		lendif = lendif * 0.5
	end

	spacing = string.rep(" ", lendif)
	
	return spacing
end -- HelpSpacing

function OnPluginBroadcast(msg, id, name, text)
	if id == "3e7dedbe37e44942dd46d264" then
		if text == "char.status" then
			gmcpstatus = gmcp("char.status.state")			
		end
	end
end

function OnPluginInstall()
	PLUGIN_VERSION  = GetPluginInfo(GetPluginID(), 19)
	PLUGIN_NAME   = GetPluginInfo(GetPluginID(), 1)

	GetSavedData()
	
	ColourNote(msg_colour, "", "Thank you for installing ", qty_colour, "", "Tallimos' Retreat v" ..  PLUGIN_VERSION, msg_colour, "", ". Please see ", help_command_colour, "", "tret help", msg_colour, "", " for more information.")
	
	Note("")
end -- OnPluginInstall

function OnPluginSaveState()
	SetVariable ("autoloadkeys", "autoloadkeys = " .. serialize.save_simple (autoloadkeys))
	SetVariable ("retpastfirstinstall", "true")
end -- OnPluginSaveState

function GetSavedData()
	if GetVariable ("retpastfirstinstall") == "true" then
		assert (loadstring (GetVariable ("autoloadkeys") or "")) ()
	else
		autoloadkeys = "FALSE"
	end
	
	canretreat = "TRUE"	
	
	if autoloadkeys == "TRUE" then
		LoadKeys()
	end
	
	SaveState()
end -- GetSavedData

function OnPluginEnable()
	GetSavedData()	
end -- OnPluginEnable

function OnPluginClose()
	if autoloadkeys == "TRUE" then
		UnloadKeysQuiet()
	end
end -- OnPluginClose

function OnPluginDisable()
	if autoloadkeys == "TRUE" then
		UnloadKeysQuiet()
	end
end -- OnPluginDisable

]]>
</script> 
</muclient>
